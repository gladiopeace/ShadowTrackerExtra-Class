//
//     Generated by class-dump 3.5 (64 bit).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class HsPullUpControllerBackDropView, HsPullUpControllerLayoutAdapter, HsPullUpControllerSurfaceView, HsPullUpViewController, NSString, UIPanGestureRecognizer, UIScrollView, UIViewPropertyAnimator;
@protocol HsPullUpControllerBehaviour, UIScrollViewDelegate;

@interface HsPullUpController : NSObject <UIGestureRecognizerDelegate, UIScrollViewDelegate>
{
    _Bool _isRemovalInteractionEnabled;
    _Bool _interactionInProgress;
    _Bool _scrollBouncable;
    _Bool _scrollIndictorVisible;
    _Bool _stopScrollDeceleration;
    _Bool _isBottomState;
    HsPullUpViewController *_viewController;
    HsPullUpControllerSurfaceView *_surfaceView;
    HsPullUpControllerBackDropView *_backdropView;
    HsPullUpControllerLayoutAdapter *_layoutAdapter;
    id <HsPullUpControllerBehaviour> _behaviour;
    UIScrollView *_scrollView;
    id <UIScrollViewDelegate> _userScrollViewDelegate;
    long long _state;
    UIPanGestureRecognizer *_panGesture;
    UIViewPropertyAnimator *_animator;
    double _transOffsetY;
    double _offsetThreshold;
    struct CGPoint _initialScrollOffset;
    struct CGRect _grabberAreaFrame;
    struct CGRect _initialFrame;
}

@property(nonatomic) double offsetThreshold; // @synthesize offsetThreshold=_offsetThreshold;
@property(nonatomic) double transOffsetY; // @synthesize transOffsetY=_transOffsetY;
@property(nonatomic) struct CGPoint initialScrollOffset; // @synthesize initialScrollOffset=_initialScrollOffset;
@property(nonatomic) struct CGRect initialFrame; // @synthesize initialFrame=_initialFrame;
@property(retain, nonatomic) UIViewPropertyAnimator *animator; // @synthesize animator=_animator;
@property(nonatomic) _Bool isBottomState; // @synthesize isBottomState=_isBottomState;
@property(nonatomic) _Bool stopScrollDeceleration; // @synthesize stopScrollDeceleration=_stopScrollDeceleration;
@property(nonatomic) _Bool scrollIndictorVisible; // @synthesize scrollIndictorVisible=_scrollIndictorVisible;
@property(nonatomic) _Bool scrollBouncable; // @synthesize scrollBouncable=_scrollBouncable;
@property(nonatomic) struct CGRect grabberAreaFrame; // @synthesize grabberAreaFrame=_grabberAreaFrame;
@property(nonatomic) _Bool interactionInProgress; // @synthesize interactionInProgress=_interactionInProgress;
@property(nonatomic) _Bool isRemovalInteractionEnabled; // @synthesize isRemovalInteractionEnabled=_isRemovalInteractionEnabled;
@property(retain, nonatomic) UIPanGestureRecognizer *panGesture; // @synthesize panGesture=_panGesture;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) __weak id <UIScrollViewDelegate> userScrollViewDelegate; // @synthesize userScrollViewDelegate=_userScrollViewDelegate;
@property(nonatomic) __weak UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) id <HsPullUpControllerBehaviour> behaviour; // @synthesize behaviour=_behaviour;
@property(retain, nonatomic) HsPullUpControllerLayoutAdapter *layoutAdapter; // @synthesize layoutAdapter=_layoutAdapter;
@property(retain, nonatomic) HsPullUpControllerBackDropView *backdropView; // @synthesize backdropView=_backdropView;
@property(retain, nonatomic) HsPullUpControllerSurfaceView *surfaceView; // @synthesize surfaceView=_surfaceView;
@property(nonatomic) __weak HsPullUpViewController *viewController; // @synthesize viewController=_viewController;
- (void).cxx_destruct;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)unlockScrollView;
- (void)lockScrollView;
- (long long)targetPositionFromPositions:(id)arg1 at:(double)arg2 and:(struct CGPoint)arg3;
- (long long)targetPositionWith:(struct CGPoint)arg1 and:(struct CGPoint)arg2;
- (double)projectWith:(double)arg1;
- (long long)redirectionalPositionWithTranslation:(struct CGPoint)arg1;
- (long long)directionalPositionWithTranslation:(struct CGPoint)arg1;
- (double)distanceTo:(long long)arg1 with:(struct CGPoint)arg2;
- (void)finishAnimationAt:(long long)arg1;
- (void)startAnimationTo:(long long)arg1 at:(double)arg2 with:(struct CGPoint)arg3;
- (double)getCurrentYFrom:(struct CGRect)arg1 with:(struct CGPoint)arg2;
- (void)endInteractionFor:(long long)arg1;
- (void)startInteractionWith:(struct CGPoint)arg1 forPrevPosition:(long long)arg2 nextPosition:(long long)arg3;
- (void)startRemovalAnimationWith:(struct CGVector)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)shouldStartRemovalAnimationWith:(struct CGPoint)arg1 velocity:(struct CGVector)arg2;
- (double)getBackdropAlphaWith:(struct CGPoint)arg1 forFractionDone:(double)arg2 nextPosition:(long long)arg3 prevPosition:(long long)arg4 nextY:(double)arg5 preY:(double)arg6;
- (double)getFractionOfMovementDoneFor:(struct CGPoint)arg1 nextY:(double)arg2 preY:(double)arg3;
- (void)updateLayoutTo:(long long)arg1;
- (void)moveFrom:(long long)arg1 to:(long long)arg2 animated:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)moveTo:(long long)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)shouldScrollViewHandleTouch:(id)arg1 atPoint:(struct CGPoint)arg2 withVelocity:(struct CGPoint)arg3;
- (void)panningEndWith:(struct CGPoint)arg1 andVelocity:(struct CGPoint)arg2;
- (void)panningChangeWith:(struct CGPoint)arg1 forPrevPosition:(long long)arg2 nextPosition:(long long)arg3;
- (void)panningBegan;
- (void)handlePanGesture:(id)arg1;
- (void)initializeDefaults;
- (id)initWithPullUpViewController:(id)arg1 layout:(id)arg2 behaviour:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

